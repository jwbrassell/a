"""Add reports plugin tables

Revision ID: 266578b5c2bc
Revises: 8803065dd675
Create Date: 2024-12-09 02:38:22.361396

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '266578b5c2bc'
down_revision = '8803065dd675'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('database_connection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('db_type', sa.String(length=50), nullable=False),
    sa.Column('host', sa.String(length=256), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('database', sa.String(length=128), nullable=True),
    sa.Column('username', sa.String(length=128), nullable=True),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name='fk_dbconn_user_id'),
    sa.PrimaryKeyConstraint('id', name='pk_database_connection')
    )
    op.create_table('report_view',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('database_id', sa.Integer(), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('column_config', sa.JSON(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_run', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name='fk_reportview_user_id'),
    sa.ForeignKeyConstraint(['database_id'], ['database_connection.id'], name='fk_reportview_dbconn_id'),
    sa.PrimaryKeyConstraint('id', name='pk_report_view')
    )
    op.create_table('view_role',
    sa.Column('view_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='fk_viewrole_role_id'),
    sa.ForeignKeyConstraint(['view_id'], ['report_view.id'], name='fk_viewrole_view_id'),
    sa.PrimaryKeyConstraint('view_id', 'role_id', name='pk_view_role')
    )
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index('ix_comment_project_id')
        batch_op.drop_index('ix_comment_task_id')

    with op.batch_alter_table('history', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index('ix_history_project_id')
        batch_op.drop_index('ix_history_task_id')

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index('ix_project_priority')
        batch_op.drop_index('ix_project_status')

    with op.batch_alter_table('project_priority', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint('uq_project_priority_name', ['name'])

    with op.batch_alter_table('project_status', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint('uq_project_status_name', ['name'])

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index('ix_task_priority_id')
        batch_op.drop_index('ix_task_project_id')
        batch_op.drop_index('ix_task_status_id')

    with op.batch_alter_table('todo', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index('ix_todo_project_id')
        batch_op.drop_index('ix_todo_task_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('todo', schema=None) as batch_op:
        batch_op.create_index('ix_todo_task_id', ['task_id'], unique=False)
        batch_op.create_index('ix_todo_project_id', ['project_id'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index('ix_task_status_id', ['status_id'], unique=False)
        batch_op.create_index('ix_task_project_id', ['project_id'], unique=False)
        batch_op.create_index('ix_task_priority_id', ['priority_id'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('project_status', schema=None) as batch_op:
        batch_op.drop_constraint('uq_project_status_name', type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('project_priority', schema=None) as batch_op:
        batch_op.drop_constraint('uq_project_priority_name', type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.create_index('ix_project_status', ['status'], unique=False)
        batch_op.create_index('ix_project_priority', ['priority'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('history', schema=None) as batch_op:
        batch_op.create_index('ix_history_task_id', ['task_id'], unique=False)
        batch_op.create_index('ix_history_project_id', ['project_id'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.create_index('ix_comment_task_id', ['task_id'], unique=False)
        batch_op.create_index('ix_comment_project_id', ['project_id'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.drop_table('view_role')
    op.drop_table('report_view')
    op.drop_table('database_connection')
    # ### end Alembic commands ###
