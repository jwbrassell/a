ui = false

listener "tcp" {
  address         = "127.0.0.1:8200"
  tls_cert_file   = "PATH_TO_SERVER_CERT"
  tls_key_file    = "PATH_TO_SERVER_KEY"
  tls_require_and_verify_client_cert = true  # Require client certificates
  tls_client_ca_file = "PATH_TO_CA_CERT"    # CA cert for client verification
}

storage "file" {
  path = "PATH_TO_VAULT_DATA"
}

api_addr = "https://127.0.0.1:8200"

# Disable mlock as it requires root privileges
disable_mlock = true

# Enhanced logging configuration
log_level = "info"
log_format = "standard"

# Add audit logging
audit {
  device "file" {
    path = "PATH_TO_AUDIT_LOG"
    log_raw = false      # Don't log sensitive data
    hmac_accessor = true # Enable HMAC on accessor IDs
  }
}

# Security settings
default_lease_ttl = "1h"
max_lease_ttl = "24h"

# Disable the web UI for security
ui = false

# Enhanced TLS configuration
listener "tcp" {
  tls_disable_client_certs = false
  tls_min_version = "tls13"  # Require TLS 1.3
  tls_prefer_server_cipher_suites = true
  tls_cipher_suites = "TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256"  # TLS 1.3 cipher suites
  
  # Enable OCSP Stapling
  tls_disable_client_certs = false
  tls_require_and_verify_client_cert = true
  
  # Rate limiting
  max_request_duration = "90s"
  max_request_size = "32KB"
}

# Enhanced security headers
api {
  cors_enabled = false
  headers {
    # Enhanced Content Security Policy
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'nonce-${nonce}'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self'; object-src 'none'; upgrade-insecure-requests; block-all-mixed-content"
    
    # Standard security headers
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Referrer-Policy = "strict-origin-when-cross-origin"
    
    # Additional security headers
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"
    Cross-Origin-Embedder-Policy = "require-corp"
    Cross-Origin-Opener-Policy = "same-origin"
    Cross-Origin-Resource-Policy = "same-origin"
    
    # Disable all CORS headers
    Access-Control-Allow-Origin = ""
    Access-Control-Allow-Credentials = ""
    Access-Control-Allow-Headers = ""
    Access-Control-Allow-Methods = ""
  }
}

# Telemetry configuration (disabled for security)
telemetry {
  disable_hostname = true
  prometheus_retention_time = "0h"
}

# Cache configuration
cache {
  use_auth_token_cache = true
  auth_token_cache_max_size = 5000
}

# Seal configuration (uncomment and configure if using auto-unseal)
# seal "transit" {
#   address = "https://vault-transit:8200"
#   token = "PATH_TO_TRANSIT_TOKEN"
#   disable_renewal = false
#   key_name = "autounseal"
#   mount_path = "transit/"
#   tls_ca_cert = "PATH_TO_TRANSIT_CA_CERT"
#   tls_client_cert = "PATH_TO_TRANSIT_CLIENT_CERT"
#   tls_client_key = "PATH_TO_TRANSIT_CLIENT_KEY"
# }

# Plugin configuration
plugin_directory = "PATH_TO_PLUGIN_DIR"

# Cluster configuration
cluster_addr = "https://127.0.0.1:8201"
cluster_cipher_suites = "TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256"

# Additional security settings
disable_sealwrap = false
disable_printable_check = false
raw_storage_endpoint = false
