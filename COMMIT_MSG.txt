feat: Harden application initialization process

- Remove dependency on migrations in favor of direct database creation
- Add proper initialization order for core and plugin data
- Fix plugin route registration and role mapping
- Add comprehensive data initialization for all plugins
- Update app initialization to handle plugin dependencies correctly

This commit improves the application's initialization reliability by:
1. Removing complex migration dependencies
2. Ensuring proper initialization order:
   - Create database tables
   - Initialize core data (users, roles, navigation)
   - Initialize plugin data (projects, dispatch, documents)
   - Register blueprints
   - Register routes
   - Map routes to roles
3. Adding proper data seeding for all plugins
4. Fixing route registration to handle plugin dependencies

Breaking Changes:
- Removed reliance on database migrations
- Changed initialization process to use setup.py
- Modified plugin loading order to ensure proper route registration

The application can now be reliably initialized from a fresh clone with:
1. python setup.py
2. flask run

All plugins (projects, dispatch, documents, reports) are now properly initialized with:
- Correct database tables
- Required initial data
- Proper route mappings and role assignments
- Navigation structure
